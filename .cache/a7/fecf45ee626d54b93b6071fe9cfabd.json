{"id":"node_modules/@azure/core-util/dist-esm/src/delay.js","dependencies":[{"name":"F:\\AzureDevops\\node_modules\\@azure\\core-util\\dist-esm\\src\\delay.js.map","includedInParent":true,"mtime":1662404434853},{"name":"F:\\AzureDevops\\package.json","includedInParent":true,"mtime":1662615235871},{"name":"F:\\AzureDevops\\node_modules\\@azure\\core-util\\package.json","includedInParent":true,"mtime":1662404434841}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.delay = delay;\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs) {\n  return new Promise(resolve => setTimeout(() => resolve(), timeInMs));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/delay.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/delay.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/delay.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":0}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":16,"column":9}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":14}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":16,"column":15}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":23}},{"source":"../../src/delay.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":16,"column":25}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":2}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":17,"column":9}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":17,"column":13}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":17,"column":20}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":17,"column":21}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":17,"column":28}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":34},"generated":{"line":17,"column":32}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":44},"generated":{"line":17,"column":42}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":45},"generated":{"line":17,"column":43}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":51},"generated":{"line":17,"column":49}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":58},"generated":{"line":17,"column":56}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":44},"generated":{"line":17,"column":58}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":62},"generated":{"line":17,"column":60}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":44},"generated":{"line":17,"column":68}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":17,"column":69}},{"source":"../../src/delay.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":70}},{"source":"../../src/delay.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../src/delay.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(() => resolve(), timeInMs));\n}\n"},"lineCount":null}},"error":null,"hash":"bb1f03dd74e6ecc413559276681591b4","cacheData":{"env":{}}}